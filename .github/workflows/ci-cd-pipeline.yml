# Version: @v4
# This file configures the continuous integration and continuous delivery (CI/CD) pipeline
# for the REST API project developed in Java with Spring Boot.

name: CI/CD pipeline

# Define events triggering the pipeline
on:
  pull_request:
    branches:
      - main # Run pipeline on Pull Requests to main branch
  push:
    branches:
      - main # Run pipeline on push to main branch

jobs:
  build-and-test:
    runs-on: windows-latest # Use Windows runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Action to clone the repository inside the container

    - name: Set up JDK 11
      uses: actions/setup-java@v4 # Set up JDK 11
      with:
        java-version: '11'
        distribution: 'adopt'  # Specify the distribution

    - name: Create Maven Wrapper directories
      run: mkdir -p .mvn/wrapper

    - name: Download Maven Wrapper JAR
      run: curl -L -o .mvn/wrapper/maven-wrapper.jar https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar

    - name: Create Maven Wrapper Properties
      run: echo 'distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.3/apache-maven-3.6.3-bin.zip' > .mvn/wrapper/maven-wrapper.properties

    - name: Set executable permissions for mvnw
      run: chmod +x mvnw mvnw.cmd

    - name: Verify with Maven
      run: cmd /c mvnw.cmd verify | tee maven-output.log  # Execute mvnw.cmd using cmd.exe to run tests and save output

    - name: Build with Maven
      run: cmd /c mvnw.cmd clean package # Execute mvnw.cmd using cmd.exe to build the project

    - name: Store JAR Artifact # Save unit-vs-int JAR
      uses: actions/upload-artifact@v4
      with:
        name: unit-vs-int-2
        path: target/unit-vs-int-0.0.1-SNAPSHOT.jar

    - name: Publish JAR to GitHub Packages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: cmd /c mvnw.cmd deploy
