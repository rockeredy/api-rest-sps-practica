# Version: @v4
# This file configures the continuous integration and continuous delivery (CI/CD) pipeline
# for the REST API project developed in Java with Spring Boot.

name: CI/CD pipeline

# Define events triggering the pipeline
on:
  pull_request:
    branches:
      - main # Run pipeline on Pull Requests to main branch
  push:
    branches:
      - main # Run pipeline on push to main branch

jobs:
  build-and-test:
    runs-on: windows-latest # Use Windows runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Action to clone the repository inside the container

    - name: Set up JDK 11
      uses: actions/setup-java@v4 # Set up JDK 11
      with:
        java-version: '11'
        distribution: 'adopt'  # Specify the distribution

    - name: Create Maven Wrapper directories
      run: mkdir -p .mvn/wrapper

    - name: Download Maven Wrapper JAR
      run: curl -L -o .mvn/wrapper/maven-wrapper.jar https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar

    - name: Create Maven Wrapper Properties
      run: echo 'distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.3/apache-maven-3.6.3-bin.zip' > .mvn/wrapper/maven-wrapper.properties

    - name: Set executable permissions for mvnw
      run: chmod +x mvnw mvnw.cmd

    - name: Verify with Maven
      run: cmd /c mvnw.cmd verify | tee maven-output.log  # Execute mvnw.cmd using cmd.exe to run tests and save output

    - name: Build with Maven
      run: cmd /c mvnw.cmd clean package # Execute mvnw.cmd using cmd.exe to build the project

    - name: Check test results
      run: |
        # Parse Maven output to check test results
        TESTS_RUN=$(grep -Po '(?<=Tests run: )\d+' maven-output.log)
        FAILURES=$(grep -Po '(?<=Failures: )\d+' maven-output.log)
        ERRORS=$(grep -Po '(?<=Errors: )\d+' maven-output.log)
        SKIPPED=$(grep -Po '(?<=Skipped: )\d+' maven-output.log)

        echo "Tests run: $TESTS_RUN, Failures: $FAILURES, Errors: $ERRORS, Skipped: $SKIPPED"

        # Fail the job if there are test failures or errors
        if [ $FAILURES -ne 0 ] || [ $ERRORS -ne 0 ]; then
          echo "Tests failed. Exiting with error."
          exit 1
        fi

    - name: Store JAR Artifact # Save artifact.jar
      uses: actions/upload-artifact@v4
      with:
        name: artifact
        path: target/*.jar

    - name: Merge a pull request if tests pass # Conditionally merge if tests pass and it's a pull request
      if: ${{ success() && github.event_name == 'pull_request' }}
      uses: sudo-bot/action-pull-request-merge@v1.2.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        number: ${{ github.event.pull_request.number }}
        merge-method: merge
        allowed-usernames-regex: ^rockeredy$
